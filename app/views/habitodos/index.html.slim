/ todo textareaでも、caretを駆使すればsetPosして目次は実現できそうだな
/ todo turbolinksとの共存をトライして
/- content_for :addjs_in_head
/ NOTE: data-turbolinks-eval: falseにすることで、turbolinksによる遷移でも、このページの最初の表示時に一度だけScriptを実行するようにする（キャッシュされてるので）
/ でも、今はHabitodoへのリンクにturbolinksをoffにしているので、毎回、最初の表示と同じ状態なので意味ないかもだが、Vue.jsへのtagには毎回付けたほうがいいはず
= javascript_pack_tag 'habitodos', 'data-turbolinks-eval': 'false'

#habitodo
  #habitodo-header.row.bg-dark.text-light
    .flex-grow-1 todo何を表示？
    .flex-grow-0 Chrome only
  #habitodo-body.row
    #sidebar-left.overflow-y-scroll.col-sm-2.order-1.order-sm-1.bg-secondary.text-light
      ul#doclist.list-unstyled.mt-3
        li.d-flex.p-0 [
          v-for="(h, key) in sortedHabitodos"
          v-bind:key="h.uuid"
          v-bind:class="h.isCurrent ? 'selected-data' : ''"
          v-on:click="showDoc(h.uuid)"
          v-on:mouseover="addHilightOnList($event)"
          v-on:mouseout="removeHilightOnList($event)"
        ]
          .flex-grow-1
            | {{ h.title }}
          .ml-2
            / バブリングを止める（saveBodyの後にshowDocしてるので結局実行されてしまうが、意図として残す）
            i.fa.fa-save v-show="h.unsaved" v-on:click.stop="saveBody(h.uuid)"
          .ml-3.mr-2
            / TODO: スマホでサイドバー領域の高さを低くしたために、dropdownメニューが全部表示されなくなってしまった
            .dropdown
              a.dropdown-toggle data-toggle="dropdown"
              .dropdown-menu.dropdown-menu-right.dropdown-menu-wide
                .change-title-form.p-2
                  .form-group
                    input type="text" class="form-control" v-model="sortedHabitodos[key].title"
                  .form-group
                    label 並び順（数値が大きい順）
                    input type="text" class="form-control" v-model="sortedHabitodos[key].order_number"
                  .text-center
                    a.btn.btn-primary[href="javascript:void(0)" v-on:click="saveAttrs(h.uuid)"] 変更
                .dropdown-divider
                .p-2.text-danger.text-center v-on:click.stop="deleteData(h.uuid)"
                  a.btn.btn-danger[href="javascript:void(0)"]
                    i.fa.fa-trash.ml-1
                    | 削除

      / 新規作成
      create-form v-on:created-data='onCreatedData'

      / 検索
      .searchbox.input-group.mt-5.mb-3
        input type='text' class='form-control' v-model='searchWord' v-on:keyup="preSearchData()" placeholder="検索ワード"
        .input-group-append
          span.input-group-text[v-on:click="searchData()" v-bind:style="{ color: searchBtnColor }"] 検索
      ul.search-result.list-group.list-group-flush.list-unstyled.mt-3.mb-3(v-if="searchResult.length > 0")
        li.list-group-item.list-group-item-primary.cursor-pointer [
          v-for="d in searchResult"
          v-bind:key="`${d.docId}-${d.rows}`"
          v-on:click="selectFoundData(d.docId, d.rows)"
        ]
          | {{ d.text + '(' + d.rows + ')' }}

    #middle-area.overflow-y-scroll.col-sm-8.order-3.order-sm-2
      p v-show="habitodos.length == 0" データないです
      / NOTE: min-height:100%にしておくと、contentEditableの要素に値がなくても、領域全部がクリッカブルになって編集可能
      .editor.min-h100 [
        v-for="ht in habitodos"
        v-bind:key="ht.uuid"
        v-show="ht.isCurrent"
        v-on:keydown="handleKeyinput($event, ht.uuid)"
        v-bind:id="`editor-${ht.uuid}`"
        contentEditable=true
        v-html="ht.markdownedBody"
      ]

    #sidebar-right.overflow-y-scroll.col-sm-2.order-2.order-sm-3.bg-light.text-secondary
      #mokujis.mt-3
        h4.text-center 目次
        ul.right-sidebar
          li [
            v-for="m in mokuji"
            v-bind:key="m['anchor']"
          ]
            a v-bind:href="'#' + m['anchor']" v-text="m['text']"

scss:
  #middle-area.col-sm-8 {
    padding-left: 0;
    padding-right: 0;
  }
  #middle-area {
    /* .editor内fontSize(em)の基準 */
    font-size: 16px;
  }
  .editor {
    padding: 15px;
    font-size: 1.1em;
    line-height: 1.8em;

    p {
      margin-bottom: 0;
    }

    h1 { font-size: 2.2em; }
    h2 { font-size: 1.9em; }
    h3 { font-size: 1.6em; }
    h4 { font-size: 1.4em; }
    h5 { font-size: 1.2em; }

  }
  ul#doclist {
    li {
      color: white;
      cursor: pointer;
    }
    li.selected-data {
      background-color: cornflowerblue;
    }
  }
