/ todo 個別にincludeしても、application.jsにまとめられるとかは？ちゃんと調べる。railsとvue.js
/ todo textareaでも、caretを駆使すればsetPosして目次は実現できそうだな
/ todo turbolinksとの共存をトライして
/- content_for :addjs_in_head
= javascript_include_tag 'vue/habitodos', defer: true

#habitodo
  #habitodo-header.row.bg-dark.text-light
    .flex-grow-1 todo この領域は不要かな？スクロール固定にしてなにか情報を出すとか
    .flex-grow-0 Chromeのみ対応
  #habitodo-body.row
    .col-sm-2.bg-secondary.text-light
      / データのリスト
      ul.sidebar.list-unstyled.mt-3
        li.d-flex [
          v-for="h in habitodos"
          v-bind:key="h.uuid"
          v-bind:class="h.isCurrent ? 'selected-data' : ''"
          v-on:click="showDoc(h.uuid)"
          v-on:mouseover="addHilightOnList($event)"
          v-on:mouseout="removeHilightOnList($event)"
        ]
          .flex-grow-1
            | {{ h.title }}
          .ml-2
            / バブリングを止める
            i.fa.fa-save v-show="h.unsaved" v-on:click.stop="saveData(h.uuid)"
          .ml-2
            i.fa.fa-trash v-on:click.stop="deleteData(h.uuid)"

      / 新規作成
      .create-doc-form.input-group.mt-3
        input type='text' class='form-control' v-model='newTitle' placeholder="タイトル"
        .input-group-append
          span.input-group-text[v-on:click="createData()"] 作成

      / 検索
      .searchbox.input-group.mt-5.mb-3
        input type='text' class='form-control' v-model='searchWord' v-on:keyup="preSearchData()" placeholder="検索ワード"
        .input-group-append
          span.input-group-text[v-on:click="searchData()" v-bind:style="{ color: searchBtnColor }"] 検索
      ul.search-result.list-group.list-group-flush.list-unstyled.mt-3.mb-3(v-if="searchResult.length > 0")
        li.list-group-item.list-group-item-primary.cursor-pointer [
          v-for="d in searchResult"
          v-bind:key="`${d.docId}-${d.rows}`"
          v-on:click="selectFoundData(d.docId, d.rows)"
        ]
          | {{ d.text + '(' + d.rows + ')' }}

    .col-sm-8
      p v-show="habitodos.length == 0" データないです
      / NOTE: height:100%にしておくと、contentEditableの要素に何も存在しなくても、領域全部がクリッカブルになって編集可能
      .editor.h100 [
        v-for="ht in habitodos"
        v-bind:key="ht.uuid"
        v-show="ht.isCurrent"
        v-on:keydown="handleKeyinput($event, ht.uuid)"
        v-bind:id="`editor-${ht.uuid}`"
        contentEditable=true
        v-html="ht.markdownedBody"
      ]

    .col-sm-2.bg-light.text-secondary[style="position:relative"]
      #mokujis.mt-3[style="position:absolute"]
        h4.text-center 目次
        ul.right-sidebar
          li [
            v-for="m in mokuji"
            v-bind:key="m['anchor']"
          ]
            a v-bind:href="'#' + m['anchor']" v-text="m['text']"

scss:
  .editor {
    padding: 10px;
    font-size: 1.1em;
    line-height: 1.8em;

    p {
      margin-bottom: 0;
    }
  }
  ul.sidebar {
    li {
      color: white;
      cursor: pointer;
    }
    li.selected-data {
      background-color: cornflowerblue;
    }
  }
